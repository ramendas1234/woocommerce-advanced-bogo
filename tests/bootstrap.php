<?php
/**
 * PHPUnit bootstrap file.
 *
 * @package Woocommerce_Smart_Coupons
 */


use Dotenv\Dotenv;

// Load Composer's autoloader
require_once __DIR__ . '/../vendor/autoload.php';

/**
 * Load the environment variables using phpdotenv
 */
$dotenv = Dotenv::createImmutable(__DIR__ . '/..');
$dotenv->load();

// Sync to getenv manually -- as its not loaded in  getenv() automatically
// This is needed for the WC test suite to work properly
foreach ($_ENV as $key => $value) {
    putenv("$key=$value");
}
// Prevent test suite from installing WP on every run
putenv( 'WP_TESTS_SKIP_INSTALL=1' );

// Check if WP_TESTS_DIR environment variable is set.
$_tests_dir = getenv( 'WP_TESTS_DIR' ) ?? null;

// echo '_tests_dir:: '. print_r($_tests_dir, true);

if ( ! $_tests_dir ) {
    echo "Invalid WP_ROOT_DIR path or wp-load.php not found. Check .env.\n";
    exit(1);
}

if ( ! file_exists( "{$_tests_dir}/includes/functions.php" ) ) {
    echo "Could not find {$_tests_dir}/includes/functions.php, have you run bin/install-wp-tests.sh ?" . PHP_EOL; // phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped
    exit( 1 );
}

// Include WordPress test environment functions.
require_once "{$_tests_dir}/includes/functions.php";

$plugin_dir = dirname( __DIR__, 2 );
define( 'WP_PLUGIN_DIR', $plugin_dir );
define( 'WC_REMOVE_ALL_DATA', false ); // Added to avoid resetting of DB by WC test suite
/**
 * =================================================================================================
 * Function to create symnlinks for both WC & WC plugin folders in /tests/wordpress plugins folder for the test cases to run properly.
 * Bit now used the approach of using WP_PLUGIN_DIR to load the required plugins.
 * Keep the code for now for ref and later can delete it
 * =================================================================================================
 */
// Symlink required plugins -- might not work on Windows.. but thats ok for now
// $test_plugins_dir = realpath(__DIR__ . '/wordpress/wp-content/plugins');
// $plugins = [
//     'woocommerce' => realpath(__DIR__ . '/../../woocommerce'),
//     // 'woocommerce-smart-coupons' => realpath(__DIR__ . '/..'),
// ];

// foreach ($plugins as $slug => $source) {
//     $dest = $test_plugins_dir . '/' . $slug;
//     if (!file_exists($dest)) {
//         if ($source && is_dir($source)) {
//             symlink($source, $dest);
//             echo "✅ Symlinked $slug plugin.\n";
//         } else {
//             echo "❌ Plugin source not found: $slug\n";
//         }
//     } else {
//         echo "ℹ️  Plugin already present: $slug\n";
//     }
// }
/* ================================================================================================= */

/**
 * =================================================================================================
 * Function to forcefully activate the plugins. Currently commented as `muplugins_loaded` is enough.
 * Keep the code for now for ref and later can delete it
 * =================================================================================================
 */
// tests_add_filter( 'option_active_plugins', function ( $plugins ) {
// 	$required = [
// 		'woocommerce/woocommerce.php',
// 		'woocommerce-smart-coupons/woocommerce-smart-coupons.php',
// 	];
// 	foreach ( $required as $plugin ) {
// 		if ( ! in_array( $plugin, $plugins, true ) ) {
// 			$plugins[] = $plugin;
// 		}
// 	}
// 	return $plugins;
// } );
/* ================================================================================================= */


// Hook into muplugins_loaded to load plugins manually
tests_add_filter( 'muplugins_loaded', function () use ( $plugin_dir ) {
    require $plugin_dir . '/woocommerce/woocommerce.php';
    require $plugin_dir . '/woocommerce-advanced-bogo/woocommerce-advanced-bogo.php';

});

// Ensure that wp-tests-config.php is included (generated by install script).
if ( ! file_exists( "{$_tests_dir}/wp-tests-config.php" ) ) {
    echo "Could not find wp-tests-config.php, have you run bin/install-wp-tests.sh ?" . PHP_EOL;
    exit( 1 );
}

/**
 * =================================================================================================
 * Include the wp-tests-config.php file.
 * Currently not used WC Bootstrap internally handles it and if we include it here, it will cause issues of duplicate constants.
 * Keep the code for now for ref and later can delete it
 * =================================================================================================
 */
// require_once "{$_tests_dir}/wp-tests-config.php";
/* ================================================================================================= */

// Start up the WC testing environment.
require __DIR__ .'/../../woocommerce/tests/legacy/bootstrap.php';

/**
 * =================================================================================================
 * Start up the WP testing environment.
 * Currently not used as we are using the WC testing environment which internally handles this.
 * Keep the code for now for ref and later can delete it
 * =================================================================================================
 */
// require "{$_tests_dir}/includes/bootstrap.php";
/* ================================================================================================= */

// loading the required base files
// TODO: load it via autoloading instead of manually
/* * =================================================================================================
Tried adding below in `composer.json` but it did not work as expected.
"autoload-dev": {
  "psr-4": {
    "Smart_Coupons\\Tests\\": "tests/"
  }
}
=================================================================================================
*/
$includes = [
    //__DIR__ . '/includes/traits/sc-coupon-helper.php',
    
    
];

if( !empty( $includes ) ){
	foreach ( $includes as $file ) {
		if ( file_exists( $file ) ) {
			require_once $file;
		} else {
			echo "Missing test include file: {$file}" . PHP_EOL;
			exit( 1 );
		}
	}
}

